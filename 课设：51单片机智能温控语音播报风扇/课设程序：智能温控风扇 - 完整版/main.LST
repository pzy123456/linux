C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2019 18:39:38 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*******************************************************************************
   2          *  µ—È√˚         :Œ¬øÿ∏–”¶∑Á…» µ—È
   3          *  π”√µƒIO       : 
   4          *  µ—È–ßπ˚       :∏˘æ›Õ‚ΩÁŒ¬∂»≤ªÕ¨£¨  µ±µ˜Ω⁄∑Á…»µƒ«ø∂»
   5          * ◊¢“‚           £∫
   6          *******************************************************************************/
   7          
   8          #include "reg51.h"
   9          #include "lcd.h"
  10          #include "temp.h"
  11          
  12          sbit key1 = P3^1;//…Ë÷√…œœﬁº”
  13          sbit key2 = P3^0;//…Ë÷√…œœﬁºı
  14          sbit key3 = P3^2;//…Ë÷√œ¬œﬁº”
  15          sbit key4 = P3^3;//…Ë÷√œ¬œﬁºı
  16          sbit fun_pwm = P1^0;
  17          sbit Irstatus = P1^1;
  18          void LcdDisplay(int);
  19          code char NUM[] = "0123456789";
  20          uchar string[] = "H:36 L:30";  //ƒ¨»œ≥ı ºªØµƒ…œœﬁœ¬œﬁ÷µ
  21          int wendu;
  22          int H = 36;
  23          int Hmax = 99;
  24          int L = 30;
  25          int Lmin = 0;
  26          uchar high_pwm;
  27          uchar pwm_t=0;
  28          void timer0_init();
  29          void keyross();
  30          /*******************************************************************************
  31          * ∫Ø ˝√˚         : main
  32          * ∫Ø ˝π¶ƒ‹       : ÷˜∫Ø ˝
  33          *  ‰»Î           : Œﬁ
  34          *  ‰≥ˆ           : Œﬁ
  35          *******************************************************************************/
  36          
  37          void main()
  38          {
  39   1        uchar i;
  40   1        int temp;
  41   1        LcdInit();       //≥ı ºªØLCD1602
  42   1        LcdWriteCom(0x88);  //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑µ⁄8∏ˆŒª÷√
  43   1        LcdWriteData('C'); 
  44   1        LcdWriteCom(0x40+0x80);
  45   1        for(i=0;i<9;i++)
  46   1        {
  47   2          LcdWriteData(string[i]);  
  48   2        } 
  49   1        
  50   1        while(1)
  51   1        { 
  52   2          //Irstatus = 0;
  53   2          wendu = Ds18b20ReadTemp();
  54   2          LcdDisplay(wendu);
  55   2          Lcd1602_Delay1ms(30);
C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2019 18:39:38 PAGE 2   

  56   2          keyross();
  57   2          timer0_init();
  58   2          temp=wendu*0.0625; //»•ø¥165––¥˙¬Îµƒ◊¢ Õ
  59   2          if(temp >= H && Irstatus == 1) //Œ¬∂»÷µ≥¨π˝…œœﬁ£¨∑Á…»»´ÀŸ‘À––3µ≤
  60   2          {
  61   3            LcdWriteCom(0x8b);
  62   3            LcdWriteData(NUM[3]);
  63   3            TR0=1;
  64   3            high_pwm = 255;
  65   3          }
  66   2          else if(temp >= ((H-L)/2 + L) && temp <= H && temp >= L && Irstatus == 1)//Œ¬∂»÷µ≥¨π˝“ª∞Î√ª”–≥¨π˝…œœﬁ÷µ£
             -¨∑Á…»‘À––2µ≤
  67   2          {
  68   3            LcdWriteCom(0x8b);
  69   3            LcdWriteData(NUM[2]);
  70   3            TR0=1;
  71   3            high_pwm = 150;
  72   3          } 
  73   2          else if(temp >= L && temp <= ((H-L)/2 + L) && Irstatus == 1)//Œ¬∂»÷µ≥¨π˝œ¬œﬁ÷µ√ª”–≥¨π˝“ª∞Î÷µ£¨∑Á…»‘À––1µ
             -≤
  74   2          {
  75   3            LcdWriteCom(0x8b);
  76   3            LcdWriteData(NUM[1]);
  77   3            TR0=1;
  78   3            high_pwm = 75;
  79   3          } 
  80   2          
  81   2          else if(temp < L || Irstatus == 0)//Œ¬∂»÷µ√ª≥¨π˝œ¬œﬁ÷µ£¨∑Á…»≤ª‘À––
  82   2          {
  83   3            LcdWriteCom(0x8b);
  84   3            LcdWriteData(NUM[0]);
  85   3            TR0=0;
  86   3            high_pwm = 255;
  87   3            fun_pwm = 0;
  88   3          } 
  89   2          
  90   2        }
  91   1      }
  92          /*******************************************************************************
  93          * ∫Ø ˝√˚         : timer0_init
  94          * ∫Ø ˝π¶ƒ‹       : T0≥ı ºªØ
  95          *  ‰»Î           : Œﬁ
  96          *  ‰≥ˆ           : Œﬁ
  97          *******************************************************************************/
  98          void timer0_init()
  99          {
 100   1        TMOD |= 0x01;//π§◊˜∑Ω Ω1£¨16Œª
 101   1        TH0=0xF4;//3ms≤˙…˙÷–∂œ£¨‘º300Hz
 102   1        TL0=0xDA;
 103   1        TR0=1;
 104   1        ET0=1;
 105   1        EA=1;
 106   1      }
 107          /*******************************************************************************
 108          * ∫Ø ˝√˚         : keyross
 109          * ∫Ø ˝π¶ƒ‹       : ∞¥º¸¥¶¿Ì∫Ø ˝
 110          *  ‰»Î           : Œﬁ
 111          *  ‰≥ˆ           : Œﬁ
 112          *******************************************************************************/
 113          void keyross()
 114          {
 115   1         if(key1==0)
C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2019 18:39:38 PAGE 3   

 116   1        {
 117   2          Lcd1602_Delay1ms(30);
 118   2          if(key1==0)
 119   2          {
 120   3            H++;
 121   3            if(H > Hmax)//…œœﬁ
 122   3            {
 123   4                LcdWriteCom(0x42+0x80);
 124   4                LcdWriteData('-');  
 125   4                LcdWriteCom(0x43+0x80);
 126   4                LcdWriteData('-');  
 127   4            }
 128   3            else 
 129   3            {
 130   4                LcdWriteCom(0x42+0x80);
 131   4                LcdWriteData(NUM[H/10]);  
 132   4                LcdWriteCom(0x43+0x80);
 133   4                LcdWriteData(NUM[H%10]);
 134   4            }               
 135   3          } 
 136   2          while(!key1);
 137   2        }  
 138   1         if(key2==0)
 139   1        {
 140   2          Lcd1602_Delay1ms(30);
 141   2          if(key2==0)
 142   2          {
 143   3            H--;
 144   3            if(H < L)
 145   3            {
 146   4              LcdWriteCom(0x42+0x80);
 147   4              LcdWriteData('-');  
 148   4              LcdWriteCom(0x43+0x80);
 149   4              LcdWriteData('-');
 150   4            }
 151   3            else
 152   3            {
 153   4              LcdWriteCom(0x42+0x80);
 154   4              LcdWriteData(NUM[H/10]);  
 155   4              LcdWriteCom(0x43+0x80);
 156   4              LcdWriteData(NUM[H%10]);  
 157   4            }
 158   3          } 
 159   2          while(!key2);
 160   2        }
 161   1        if(key3==0)
 162   1        {
 163   2          Lcd1602_Delay1ms(30);
 164   2          if(key3==0)
 165   2          {
 166   3            L++;
 167   3            if(L > H)
 168   3            {
 169   4              LcdWriteCom(0x47+0x80);
 170   4              LcdWriteData('-');  
 171   4              LcdWriteCom(0x48+0x80);
 172   4              LcdWriteData('-');  
 173   4            }
 174   3            else
 175   3            {
 176   4              LcdWriteCom(0x47+0x80);
 177   4              LcdWriteData(NUM[L/10]);  
C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2019 18:39:38 PAGE 4   

 178   4              LcdWriteCom(0x48+0x80);
 179   4              LcdWriteData(NUM[L%10]);  
 180   4            }
 181   3          } 
 182   2          while(!key3);
 183   2        }
 184   1        
 185   1        if(key4==0)
 186   1        {
 187   2          Lcd1602_Delay1ms(30);
 188   2          if(key4==0)
 189   2          {
 190   3            L--;
 191   3            if(L < Lmin)
 192   3            {
 193   4              LcdWriteCom(0x47+0x80);
 194   4              LcdWriteData('-');  
 195   4              LcdWriteCom(0x48+0x80);
 196   4              LcdWriteData('-');
 197   4            }
 198   3            else
 199   3            {
 200   4              LcdWriteCom(0x47+0x80);
 201   4              LcdWriteData(NUM[L/10]);  
 202   4              LcdWriteCom(0x48+0x80);
 203   4              LcdWriteData(NUM[L%10]);  
 204   4            }
 205   3          } 
 206   2          while(!key4);
 207   2        }
 208   1      }
 209          
 210          /*******************************************************************************
 211          * ∫Ø ˝√˚         : LcdDisplay()
 212          * ∫Ø ˝π¶ƒ‹       : LCDœ‘ æ∂¡»°µΩµƒŒ¬∂»
 213          *  ‰»Î           : v
 214          *  ‰≥ˆ           : Œﬁ
 215          *******************************************************************************/
 216          void LcdDisplay(int temp) //lcdœ‘ æ
 217          {
 218   1          
 219   1        uchar ds18b20_datas[] = {0, 0, 0, 0, 0}; //∂®“Âœ‘ æds18b20œ‘ æ ˝◊È
 220   1        float tp;  
 221   1        if(temp < 0)        //µ±Œ¬∂»÷µŒ™∏∫ ˝
 222   1          {
 223   2          LcdWriteCom(0x80);    //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑
 224   2          LcdWriteData('-');      //œ‘ æ∏∫
 225   2          //“ÚŒ™∂¡»°µƒŒ¬∂» « µº Œ¬∂»µƒ≤π¬Î£¨À˘“‘ºı1£¨‘Ÿ»°∑¥«Û≥ˆ‘≠¬Î
 226   2          temp=temp-1;
 227   2          temp=~temp;
 228   2          tp=temp;
 229   2          temp=tp*0.0625*100+0.5; 
 230   2          //¡Ù¡Ω∏ˆ–° ˝µ„æÕ*100£¨+0.5 «Àƒ…·ŒÂ»Î£¨“ÚŒ™C”Ô—‘∏°µ„ ˝◊™ªªŒ™’˚–Õµƒ ±∫Ú∞—–° ˝µ„
 231   2          //∫Û√Êµƒ ˝◊‘∂Ø»•µÙ£¨≤ªπ‹ «∑Ò¥Û”⁄0.5£¨∂¯+0.5÷Æ∫Û¥Û”⁄0.5µƒæÕ «Ω¯1¡À£¨–°”⁄0.5µƒæÕ
 232   2          //À„”….5£¨ªπ «‘⁄–° ˝µ„∫Û√Ê°£
 233   2          }
 234   1        else
 235   1          {     
 236   2            LcdWriteCom(0x80);    //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑
 237   2            LcdWriteData('+');    //œ‘ æ’˝
 238   2            tp=temp;//“ÚŒ™ ˝æ›¥¶¿Ì”––° ˝µ„À˘“‘Ω´Œ¬∂»∏≥∏¯“ª∏ˆ∏°µ„–Õ±‰¡ø
 239   2            //»Áπ˚Œ¬∂» «’˝µƒƒ«√¥£¨ƒ«√¥’˝ ˝µƒ‘≠¬ÎæÕ «≤π¬ÎÀ¸±æ…Ì
C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2019 18:39:38 PAGE 5   

 240   2            temp=tp*0.0625*100+0.5; 
 241   2            //¡Ù¡Ω∏ˆ–° ˝µ„æÕ*100£¨+0.5 «Àƒ…·ŒÂ»Î£¨“ÚŒ™C”Ô—‘∏°µ„ ˝◊™ªªŒ™’˚–Õµƒ ±∫Ú∞—–° ˝µ„
 242   2            //∫Û√Êµƒ ˝◊‘∂Ø»•µÙ£¨≤ªπ‹ «∑Ò¥Û”⁄0.5£¨∂¯+0.5÷Æ∫Û¥Û”⁄0.5µƒæÕ «Ω¯1¡À£¨–°”⁄0.5µƒæÕ
 243   2            //À„º”…œ0.5£¨ªπ «‘⁄–° ˝µ„∫Û√Ê°£
 244   2        }
 245   1        ds18b20_datas[0] = temp / 10000;
 246   1        ds18b20_datas[1] = temp % 10000 / 1000;
 247   1        ds18b20_datas[2] = temp % 1000 / 100;
 248   1        ds18b20_datas[3] = temp % 100 / 10;
 249   1        ds18b20_datas[4] = temp % 10;
 250   1        
 251   1      
 252   1        //ds18b20µƒœ‘ æ ˝æ›
 253   1        LcdWriteCom(0x82);      //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑
 254   1        LcdWriteData('0'+ds18b20_datas[0]); //∞ŸŒª 
 255   1        
 256   1        LcdWriteCom(0x83);     //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑
 257   1        LcdWriteData('0'+ds18b20_datas[1]); // ÆŒª
 258   1      
 259   1        LcdWriteCom(0x84);    //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑
 260   1        LcdWriteData('0'+ds18b20_datas[2]); //∏ˆŒª 
 261   1      
 262   1        LcdWriteCom(0x85);    //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑
 263   1        LcdWriteData('.');    //œ‘ æ °Æ.°Ø
 264   1      
 265   1        LcdWriteCom(0x86);     //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑
 266   1        LcdWriteData('0'+ds18b20_datas[3]); //œ‘ æ–° ˝µ„  
 267   1      
 268   1        LcdWriteCom(0x87);     //–¥µÿ÷∑ 80±Ì æ≥ı ºµÿ÷∑
 269   1        LcdWriteData('0'+ds18b20_datas[4]); //œ‘ æ–° ˝µ„
 270   1      }
 271          /*******************************************************************************
 272          * ∫Ø ˝√˚         : timer0 interrupt
 273          * ∫Ø ˝π¶ƒ‹       : T0÷–∂œ∫Ø ˝
 274          *  ‰»Î           : Œﬁ
 275          *  ‰≥ˆ           : Œﬁ
 276          *******************************************************************************/
 277          void timer0(void) interrupt 1 using 1
 278          {
 279   1        TH0=0xF4;
 280   1        TL0=0xDA;
 281   1        pwm_t++;//∂® ±÷‹∆⁄+1
 282   1        if(pwm_t == 255)//“ª∏ˆ¬ˆ≥ÂµΩ¡À
 283   1        {
 284   2          pwm_t = 0;//∂® ±÷‹∆⁄÷ÿ–¬º∆ ˝
 285   2        }
 286   1         if(pwm_t <= high_pwm)//µ±÷‹∆⁄∫Õ∏ﬂµÁ∆Ω’ºø’±»œ‡µ» ±
 287   1        {
 288   2            fun_pwm = 1;// πƒ‹PWM
 289   2        }
 290   1        else
 291   1        {
 292   2            fun_pwm = 0;// ßƒ‹PWM
 293   2        }
 294   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1194    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2019 18:39:38 PAGE 6   

   DATA SIZE        =     22      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
